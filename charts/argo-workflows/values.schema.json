{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "ingress": {
      "type": "object",
      "form": true,
      "title": "Ingress Details",
      "x-onyxia": {
        "overwriteSchemaWith": "argo-workflows/ingress.json"
      },
      "properties": {
        "enabled": {
          "description": "Enable Ingress",
          "type": "boolean",
          "default": true,
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "k8s.ingress"
          }
        },
        "hostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "x-onyxia": {
            "overwriteDefaultWith": "{{project.id}}-argo-workflows.{{k8s.domain}}"
          }
        },
        "ingressClassName": {
          "type": "string",
          "form": true,
          "title": "ingressClassName",
          "default": "",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{k8s.ingressClassName}}"
          }
        }
      }
    },
    "route": {
      "type": "object",
      "form": true,
      "title": "Route details",
      "properties": {
        "enabled": {
          "description": "Enable route",
          "type": "boolean",
          "default": false,
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "k8s.route"
          }
        },
        "hostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{project.id}}-argo-workflows.{{k8s.domain}}"
          }
        }
      }
    },
    "security": {
      "description": "security specific configuration",
      "type": "object",
      "properties": {
        "networkPolicy": {
          "type": "object",
          "description": "Define access policy to the service",
          "x-onyxia": {
            "overwriteSchemaWith": "network-policy.json"
          },
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enable network policy",
              "description": "Only pod from the same namespace will be allowed",
              "default": false,
              "x-onyxia": {
                "overwriteDefaultWith": "region.defaultNetworkPolicy"
              }
            },
            "from": {
              "description": "Array of sources allowed to have network access to your service",
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": true
              },
              "default": [],
              "x-onyxia": {
                "hidden": true,
                "overwriteDefaultWith": "region.from"
              }
            }
          }
        }
      }
    },
    "serviceAccount": {
      "type": "object",
      "form": true,
      "title": "Kubernetes service account",
      "properties": {
        "name": {
          "description": "name of the service account created for your workflows",
          "type": "string",
          "default": "workflow",
          "pattern": "^[a-z0-9-]+$"
        }
      }
    },
    "argo-workflows": {
      "type": "object",
      "title": "argocd",
      "properties": {
        "server": {
          "type": "object",
          "title": "Server",
          "properties": {
            "resources": {
              "description": "Your service will have at least the requested resources and never more than its limits. No limit for a resource and you can consume everything left on the host machine.",
              "type": "object",
              "properties": {
                "requests": {
                  "description": "Guaranteed resources",
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "description": "The amount of cpu guaranteed",
                      "title": "CPU",
                      "type": "string",
                      "default": "100m",
                      "render": "slider",
                      "sliderMin": 50,
                      "sliderMax": 16000,
                      "sliderStep": 50,
                      "sliderUnit": "m",
                      "sliderExtremity": "down",
                      "sliderExtremitySemantic": "guaranteed",
                      "sliderRangeId": "cpu"
                    },
                    "memory": {
                      "description": "The amount of memory guaranteed",
                      "title": "memory",
                      "type": "string",
                      "default": "200Mi",
                      "render": "slider",
                      "sliderMin": 100,
                      "sliderMax": 8000,
                      "sliderStep": 100,
                      "sliderUnit": "Mi",
                      "sliderExtremity": "down",
                      "sliderExtremitySemantic": "guaranteed",
                      "sliderRangeId": "memory"
                    }
                  }
                },
                "limits": {
                  "description": "max resources",
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "description": "The maximum amount of cpu",
                      "title": "CPU",
                      "type": "string",
                      "default": "2000m",
                      "render": "slider",
                      "sliderMin": 50,
                      "sliderMax": 16000,
                      "sliderStep": 50,
                      "sliderUnit": "m",
                      "sliderExtremity": "up",
                      "sliderExtremitySemantic": "Maximum",
                      "sliderRangeId": "cpu"
                    },
                    "memory": {
                      "description": "The maximum amount of memory",
                      "title": "Memory",
                      "type": "string",
                      "default": "2000Mi",
                      "render": "slider",
                      "sliderMin": 100,
                      "sliderMax": 8000,
                      "sliderStep": 100,
                      "sliderUnit": "Mi",
                      "sliderExtremity": "up",
                      "sliderExtremitySemantic": "Maximum",
                      "sliderRangeId": "memory"
                    }
                  }
                }
              }
            },
            "tolerations": {
              "description": "Array of tolerations",
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": true
              },
              "default": [],
              "x-onyxia": {
                "hidden": true,
                "overwriteDefaultWith": "region.tolerations",
                "overwriteSchemaWith": "tolerations.json"
              }
            },
            "nodeSelector": {
              "title": "Node selector",
              "type": "object",
              "default": {},
              "additionalProperties": {
                "type": "string"
              },
              "x-onyxia": {
                "hidden": true,
                "overwriteDefaultWith": "region.nodeSelector",
                "overwriteSchemaWith": "nodeSelector.json"
              }
            }
          }
        },
        "controller": {
          "type": "object",
          "title": "controller",
          "properties": {
            "resources": {
              "description": "Your service will have at least the requested resources and never more than its limits. No limit for a resource and you can consume everything left on the host machine.",
              "type": "object",
              "properties": {
                "requests": {
                  "description": "Guaranteed resources",
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "description": "The amount of cpu guaranteed",
                      "title": "CPU",
                      "type": "string",
                      "default": "100m",
                      "render": "slider",
                      "sliderMin": 50,
                      "sliderMax": 16000,
                      "sliderStep": 50,
                      "sliderUnit": "m",
                      "sliderExtremity": "down",
                      "sliderExtremitySemantic": "guaranteed",
                      "sliderRangeId": "cpu"
                    },
                    "memory": {
                      "description": "The amount of memory guaranteed",
                      "title": "memory",
                      "type": "string",
                      "default": "200Mi",
                      "render": "slider",
                      "sliderMin": 100,
                      "sliderMax": 8000,
                      "sliderStep": 100,
                      "sliderUnit": "Mi",
                      "sliderExtremity": "down",
                      "sliderExtremitySemantic": "guaranteed",
                      "sliderRangeId": "memory"
                    }
                  }
                },
                "limits": {
                  "description": "max resources",
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "description": "The maximum amount of cpu",
                      "title": "CPU",
                      "type": "string",
                      "default": "2000m",
                      "render": "slider",
                      "sliderMin": 50,
                      "sliderMax": 16000,
                      "sliderStep": 50,
                      "sliderUnit": "m",
                      "sliderExtremity": "up",
                      "sliderExtremitySemantic": "Maximum",
                      "sliderRangeId": "cpu"
                    },
                    "memory": {
                      "description": "The maximum amount of memory",
                      "title": "Memory",
                      "type": "string",
                      "default": "2000Mi",
                      "render": "slider",
                      "sliderMin": 100,
                      "sliderMax": 8000,
                      "sliderStep": 100,
                      "sliderUnit": "Mi",
                      "sliderExtremity": "up",
                      "sliderExtremitySemantic": "Maximum",
                      "sliderRangeId": "memory"
                    }
                  }
                }
              }
            },
            "tolerations": {
              "description": "Array of tolerations",
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": true
              },
              "default": [],
              "x-onyxia": {
                "hidden": true,
                "overwriteDefaultWith": "region.tolerations",
                "overwriteSchemaWith": "tolerations.json"
              }
            },
            "nodeSelector": {
              "title": "Node selector",
              "type": "object",
              "default": {},
              "additionalProperties": {
                "type": "string"
              },
              "x-onyxia": {
                "hidden": true,
                "overwriteDefaultWith": "region.nodeSelector",
                "overwriteSchemaWith": "nodeSelector.json"
              }
            }
          }
        }
      }
    }
  }
}
