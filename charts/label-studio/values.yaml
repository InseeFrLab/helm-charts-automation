service:
  image:
    repository: "heartexlabs/label-studio"
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

replicaCount: 1

liveness:
  enabled : "true"

s3:
  # Specifies whether a config map should be created
  enabled: false
  # The name of the configmap to use.
  # If not set and create is true, a name is generated using the fullname template
  configMapName: ""
  accessKeyId: ""
  endpoint: ""
  defaultRegion: ""
  secretAccessKey: ""
  sessionToken: ""

security:
  password: changeme
  username: username
  networkPolicy: 
    enabled: false
    from: []
  allowlist:
    enabled: true
    ip: "0.0.0.0/0"  
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

postgresql:
  image:
    tag: "15"
  auth:
    username: "admin"
    password: "changeme"
    postgresPassword: "changeme"
    database: "labelstudio"
  fullnameOverride: "label-studio-db"
  primary:
    resources:
      limits:
        cpu: "1000m"
        memory: "2000Mi"
      requests:
        memory: 256Mi
        cpu: 250m
    persistence:
      enabled: true
      size: 5Gi

networking:
  type: ClusterIP
  service:
    port: 80

ingress:
  enabled: true
  tls: true
  ingressClassName: ""
  annotations: []
  hostname: chart-example.local
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

route:
  enabled: false
  annotations: []
    # route.openshift.io/termination: "reencrypt"
  hostname: chart-example.local
  tls:
    termination: edge
    # key:
    # certificate:
    # caCertificate:
    # destinationCACertificate:
  wildcardPolicy: None

readiness:
  enabled: "true"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

networkPolicy:
  enabled: false

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
