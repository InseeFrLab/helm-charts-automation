{
    "$schema": "http://json-schema.org/schema#",
    "type": "object",
    "properties": {
        "security": {
            "type": "object",
            "description": "security specific configuration",
            "properties": {
                "email": {
                    "type": "string",
                    "form": true,
                    "title": "login",
                    "x-form": {
                        "value": "{{user.email}}"
                    },
                    "x-onyxia": {
                        "overwriteDefaultWith": "{{user.email}}"
                    }
                },
                "username": {
                    "type": "string",
                    "form": true,
                    "title": "Username",
                    "x-form": {
                        "value": "{{project.id}}"
                    },
                    "x-onyxia": {
                        "overwriteDefaultWith": "{{project.id}}"
                    }
                },
                "password": {
                    "type": "string",
                    "form": true,
                    "title": "Username",
                    "x-form": {
                        "value": "{{project.password}}"
                    },
                    "x-onyxia": {
                        "overwriteDefaultWith": "{{project.password}}"
                    }
                },
                "allowlist": {
                  "type": "object",
                  "description": "IP protection",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "title": "Enable IP protection",
                      "description": "Only the configured set of IPs will be able to reach the service",
                      "default": true,
                      "x-form": {
                        "value": "{{region.defaultIpProtection}}"
                      },
                      "x-onyxia": {
                        "overwriteDefaultWith": "region.defaultIpProtection"
                      }
                    },
                    "ip": {
                      "type": "string",
                      "description": "the white list of IP is whitespace",
                      "title": "Whitelist of IP",
                      "default": "0.0.0.0",
                      "x-form": {
                        "value": "{{user.ip}}"
                      },
                      "x-onyxia": {
                        "overwriteDefaultWith": "{{user.ip}}"
                      },
                      "hidden": {
                        "value": false,
                        "path": "security/allowlist/enabled"
                      }
                    }
                  }
                },
                "networkPolicy": {
                  "type": "object",
                  "description": "Define access policy to the service",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "title": "Enable network policy",
                      "description": "Only pod from the same namespace will be allowed",
                      "default": true,
                      "x-form": {
                        "value": "{{region.defaultNetworkPolicy}}"
                      },
                      "x-onyxia": {
                        "overwriteDefaultWith": "region.defaultNetworkPolicy"
                      }
                    },
                    "from": {
                      "type": "array",
                      "description": "Array of source allowed to have network access to your service",
                      "default": [],
                      "x-form": {
                        "hidden": true,
                        "value": "{{region.from}}"
                      },
                      "x-onyxia": {
                        "hidden": true,
                        "overwriteDefaultWith": "region.from"
                      }
                    }
                  }
                }
            }
        },
        "s3": {
            "description": "Configuration of temporary identity",
            "type": "object",
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "AWS S3 Endpoint",
                    "x-form": {
                        "value": "{{s3.AWS_S3_ENDPOINT}}"
                    },
                    "x-onyxia": {
                        "overwriteDefaultWith": "{{s3.AWS_S3_ENDPOINT}}"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "AWS S3 default region",
                    "x-form": {
                        "value": "{{s3.AWS_DEFAULT_REGION}}"
                    },
                    "x-onyxia": {
                        "overwriteDefaultWith": "{{s3.AWS_DEFAULT_REGION}}"
                    }
                },
                "accessKey": {
                    "type": "string",
                    "description": "AWS Access Key",
                    "x-form": {
                        "value": "{{s3.AWS_ACCESS_KEY_ID}}"
                    },
                    "x-onyxia": {
                        "overwriteDefaultWith": "{{s3.AWS_ACCESS_KEY_ID}}"
                    }
                },
                "secretKey": {
                    "description": "AWS S3 secret access key",
                    "type": "string",
                    "x-form": {
                        "value": "{{s3.AWS_SECRET_ACCESS_KEY}}"
                    },
                    "x-onyxia": {
                        "overwriteDefaultWith": "{{s3.AWS_SECRET_ACCESS_KEY}}"
                    }
                },
                "bucketName": {
                    "description": "AWS S3 Bucket",
                    "type": "string",
                    "x-form": {
                        "value": "{{s3.AWS_BUCKET_NAME}}"
                    },
                    "x-onyxia": {
                        "overwriteDefaultWith": "{{s3.AWS_BUCKET_NAME}}"
                    }
                }
            }

        },
        "dockerRegistry": {
            "server": {
                "type": "string",
                "description": "Docker Hub Server",
                "default": "https://index.docker.io/v1"
            },
            "username": {
                "type": "string",
                "description": "Docker Hub account username",
                "default": ""
            },
            "password": {
                "type": "string",
                "description": "Docker Hub account token",
                "title": "token",
                "default": ""
            },
            "mail": {
              "type": "string",
              "description": "Docker Hub account mail",
              "default": ""
            },
            "bentoRepositoryName": {
              "type": "string",
              "description": "Images will be pushed to this repo, e.g: inseefrlab/onyxia-web",
              "title": "Docker Hub Repository",
              "default": ""
            }
        },
        "resources": {
          "description": "Your service will have at least the requested resources and never more than its limits. No limit for a resource and you can consume everything left on the host machine.",
          "type": "object",
          "properties": {
              "requests": {
                  "description": "Guaranteed resources",
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "description": "The amount of cpu guaranteed",
                      "title": "CPU",
                      "type": "string",
                      "default": "100m",
                      "render": "slider",
                      "sliderMin": 50,
                      "sliderMax": 40000,
                      "sliderStep": 50,
                      "sliderUnit": "m",
                      "sliderExtremity": "down",
                      "sliderExtremitySemantic": "guaranteed",
                      "sliderRangeId": "cpu"
                    },
                    "memory": {
                      "description": "The amount of memory guaranteed",
                      "title": "memory",
                      "type": "string",
                      "default": "2Gi",
                      "render": "slider",
                      "sliderMin": 1,
                      "sliderMax": 200,
                      "sliderStep": 1,
                      "sliderUnit": "Gi",
                      "sliderExtremity": "down",
                      "sliderExtremitySemantic": "guaranteed",
                      "sliderRangeId": "memory"
                    }
                  }
              },
              "limits": {
                  "description": "max resources",
                  "type": "object",
                  "properties": {
                      "cpu": {
                          "description": "The maximum amount of cpu",
                          "title": "CPU",
                          "type": "string",
                          "default": "30000m",
                          "render": "slider",
                          "sliderMin": 50,
                          "sliderMax": 40000,
                          "sliderStep": 50,
                          "sliderUnit": "m",
                          "sliderExtremity": "up",
                          "sliderExtremitySemantic": "Maximum",
                          "sliderRangeId": "cpu"
                        },
                        "memory": {
                          "description": "The maximum amount of memory",
                          "title": "Memory", 
                          "type": "string",
                          "default": "50Gi",
                          "render": "slider",
                          "sliderMin": 1,
                          "sliderMax": 200,
                          "sliderStep": 1,
                          "sliderUnit": "Gi",
                          "sliderExtremity": "up",
                          "sliderExtremitySemantic": "Maximum",
                          "sliderRangeId": "memory"
                        }
                  }
              }
          }
        },
        "global": {
          "description": "postgres specific configuration",
          "type": "object",
          "title": "Database",
          "properties": {
            "postgresql": {
              "description": "postgres specific configuration",
              "type": "object",
              "title": "Database",
              "properties": {
                "auth": {
                  "description": "postgres specific configuration",
                  "type": "object",
                  "title": "Authentification",
                  "properties": {
                    "postgresPassword": {
                      "type": "string",
                      "title": "Password",
                      "default": "changeme",
                      "x-form": {
                        "value": "{{project.password}}"
                      },
                      "x-onyxia": {
                        "overwriteDefaultWith": "{{project.password}}"
                      }
                    },
                    "database": {
                      "description": "Name for the default database that is created when the image is first started.",
                      "type": "string",
                      "title": "Database",
                      "default": "yatai"
                    }
                  }
                }
              }
            }
          }
        },
        "layers": {
          "type": "object",
          "form": true,
          "properties": {
            "network": {
              "type": "object",
              "properties": {
                "domainSuffix": {
                  "type": "string",
                  "form": true,
                  "x-form": {
                    "hidden": true,
                    "value": "{{k8s.domain}}"
                  },
                  "x-onyxia": {
                    "hidden": true,
                    "overwriteDefaultWith": "{{k8s.domain}}"
                  }
                }
              }
            }
          }
        },
        "ingress": {
            "type": "object",
            "form": true,
            "title": "Ingress Details",
            "properties": {
              "host": {
                "type": "string",
                "form": true,
                "title": "Hostname",
                "x-form": {
                  "hidden": true,
                  "value": "{{project.id}}-{{k8s.randomSubdomain}}.{{k8s.domain}}"
                },
                "x-onyxia": {
                    "hidden": true,
                    "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}.{{k8s.domain}}"
                }
              },
              "className": {
                  "type": "string",
                  "form": true,
                  "title": "ingressClassName",
                  "default": "",
                  "x-form": {
                      "hidden": true,
                      "value": "{{k8s.ingressClassName}}"
                  },
                  "x-onyxia": {
                      "hidden": true,
                      "overwriteDefaultWith": "{{k8s.ingressClassName}}"
                  }
              }
            }
          }
    }
}