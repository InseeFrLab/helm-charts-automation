{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "service": {
      "description": "Service specific configuration",
      "type": "object",
      "properties": {
        "image": {
          "description": "image docker",
          "type": "object",
          "properties": {
            "pullPolicy": {
              "type": "string",
              "description": "option when pulling the docker image",
              "default": "IfNotPresent",
              "enum": [
                "IfNotPresent",
                "Always",
                "Never"
              ]
            },
            "version": {
              "description": "supported versions",
              "type": "string",
              "listEnum": [
                "inseefrlab/mlflow:v2.5.0",
                "inseefrlab/mlflow:v2.2.2"
              ],
              "render": "list",
              "pattern": "^[a-z0-9-_./]+(:[a-z0-9-_.]+)?$",
              "hidden": {
                "value": true,
                "path": "service/image/custom/enabled"
              },
              "default": "inseefrlab/mlflow:v2.2.2"
            },
            "custom": {
              "description": "use a custom docker image",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "custom image",
                  "type": "boolean",
                  "description": "use a custom jupyter docker image",
                  "default": false
                },
                "version": {
                  "description": "unsupported version",
                  "type": "string",
                  "default": "inseefrlab/mlflow:v2.2.2",
                  "hidden": {
                    "value": false,
                    "path": "service/image/custom/enabled"
                  }
                }
              }
            }
          }
        },
        "directory": {
          "description": "directory of artifact root repository",
          "type": "string",
          "default": "/tmp/mlflow/artifacts/",
          "x-onyxia": {
            "overwriteDefaultWith": "s3://{{s3.AWS_BUCKET_NAME}}/mlflow-artifacts"
          }
        }
      }
    },
    "s3": {
      "description": "Configuration of temporary identity",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Add S3 temporary identity inside your environment",
          "default": true
        },
        "accessKeyId": {
          "description": "AWS Access Key",
          "type": "string",
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.AWS_ACCESS_KEY_ID}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        },
        "endpoint": {
          "description": "AWS S3 Endpoint",
          "type": "string",
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.AWS_S3_ENDPOINT}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        },
        "defaultRegion": {
          "description": "AWS S3 default region",
          "type": "string",
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.AWS_DEFAULT_REGION}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        },
        "secretAccessKey": {
          "description": "AWS S3 secret access key",
          "type": "string",
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.AWS_SECRET_ACCESS_KEY}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        },
        "sessionToken": {
          "description": "AWS S3 session Token",
          "type": "string",
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.AWS_SESSION_TOKEN}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        }
      }
    },
    "ingress": {
      "type": "object",
      "form": true,
      "title": "Ingress Details",
      "properties": {
        "enabled": {
          "description": "Enable Ingress",
          "type": "boolean",
          "default": true,
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "k8s.ingress"
          }
        },
        "hostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "x-onyxia": {
            "hidden": false,
            "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}.{{k8s.domain}}"
          }
        },
        "ingressClassName": {
          "type": "string",
          "form": true,
          "title": "ingressClassName",
          "default": "",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{k8s.ingressClassName}}"
          }
        }
      }
    },
    "route": {
      "type": "object",
      "form": true,
      "title": "Route details",
      "properties": {
        "enabled": {
          "description": "Enable route",
          "type": "boolean",
          "default": false,
          "x-onyxia": {
            "hidden": false,
            "overwriteDefaultWith": "k8s.route"
          }
        },
        "hostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "x-onyxia": {
            "hidden": false,
            "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}.{{k8s.domain}}"
          }
        }
      }
    },
    "security": {
      "description": "security specific configuration",
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "Password",
          "default": "changeme",
          "x-onyxia": {
            "overwriteDefaultWith": "{{project.password}}"
          }
        },
        "allowlist": {
          "type": "object",
          "description": "IP protection",
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enable IP protection",
              "description": "Only the configured set of IPs will be able to reach the service",
              "default": true,
              "x-onyxia": {
                "overwriteDefaultWith": "region.defaultIpProtection"
              }
            },
            "ip": {
              "type": "string",
              "description": "the white list of IP is whitespace",
              "title": "Whitelist of IP",
              "default": "0.0.0.0",
              "x-onyxia": {
                "overwriteDefaultWith": "{{user.ip}}"
              },
              "hidden": {
                "value": false,
                "path": "security/allowlist/enabled"
              }
            }
          }
        },
        "networkPolicy": {
          "type": "object",
          "description": "Define access policy to the service",
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enable network policy",
              "description": "Only pod from the same namespace will be allowed",
              "default": true,
              "x-onyxia": {
                "overwriteDefaultWith": "region.defaultNetworkPolicy"
              }
            },
            "from": {
              "type": "array",
              "description": "Array of source allowed to have network access to your service",
              "default": [
                {
                  "namespaceSelector": {
                    "matchLabels": {
                      "kubernetes.io/metadata.name": "ingress"
                    }
                  }
                }
              ],
              "x-onyxia": {
                "overwriteDefaultWith": "region.from"
              }
            }
          }
        }
      }
    },
    "resources": {
      "description": "Your service will have at least the requested resources and never more than its limits. No limit for a resource and you can consume everything left on the host machine.",
      "type": "object",
      "properties": {
        "requests": {
          "description": "Guaranteed resources",
          "type": "object",
          "properties": {
            "cpu": {
              "description": "The amount of cpu guaranteed",
              "title": "CPU",
              "type": "string",
              "default": "100m",
              "render": "slider",
              "sliderMin": 50,
              "sliderMax": 40000,
              "sliderStep": 50,
              "sliderUnit": "m",
              "sliderExtremity": "down",
              "sliderExtremitySemantic": "guaranteed",
              "sliderRangeId": "cpu"
            },
            "memory": {
              "description": "The amount of memory guaranteed",
              "title": "memory",
              "type": "string",
              "default": "2Gi",
              "render": "slider",
              "sliderMin": 1,
              "sliderMax": 200,
              "sliderStep": 1,
              "sliderUnit": "Gi",
              "sliderExtremity": "down",
              "sliderExtremitySemantic": "guaranteed",
              "sliderRangeId": "memory"
            }
          }
        },
        "limits": {
          "description": "max resources",
          "type": "object",
          "properties": {
            "cpu": {
              "description": "The maximum amount of cpu",
              "title": "CPU",
              "type": "string",
              "default": "30000m",
              "render": "slider",
              "sliderMin": 50,
              "sliderMax": 40000,
              "sliderStep": 50,
              "sliderUnit": "m",
              "sliderExtremity": "up",
              "sliderExtremitySemantic": "Maximum",
              "sliderRangeId": "cpu"
            },
            "memory": {
              "description": "The maximum amount of memory",
              "title": "Memory",
              "type": "string",
              "default": "50Gi",
              "render": "slider",
              "sliderMin": 1,
              "sliderMax": 200,
              "sliderStep": 1,
              "sliderUnit": "Gi",
              "sliderExtremity": "up",
              "sliderExtremitySemantic": "Maximum",
              "sliderRangeId": "memory"
            }
          }
        }
      }
    },
    "postgresql": {
      "description": "postgres specific configuration",
      "type": "object",
      "title": "Database",
      "properties": {
        "image": {
          "description": "image specific configuration",
          "type": "object",
          "properties": {
            "tag": {
              "description": "postgresql major version",
              "type": "string",
              "enum": [
                "12",
                "13",
                "14",
                "15"
              ],
              "default": "15"
            }
          }
        },
        "auth": {
          "description": "postgres specific configuration",
          "type": "object",
          "title": "Authentification",
          "properties": {
            "username": {
              "type": "string",
              "title": "User",
              "default": "user",
              "x-onyxia": {
                "overwriteDefaultWith": "{{project.id}}"
              }
            },
            "password": {
              "type": "string",
              "title": "User Password",
              "default": "changeme",
              "x-onyxia": {
                "overwriteDefaultWith": "{{project.password}}"
              }
            },
            "postgresPassword": {
              "type": "string",
              "title": "Admin Password",
              "default": "changeme",
              "x-onyxia": {
                "overwriteDefaultWith": "{{project.password}}"
              }
            },
            "database": {
              "description": "Name for the default database that is created when the image is first started.",
              "type": "string",
              "title": "Database",
              "default": "mlflow"
            }
          }
        }
      }
    }
  }
}