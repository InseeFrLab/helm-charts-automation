{
    "$schema": "http://json-schema.org/schema#",
    "type": "object",
    "properties": {
      "service": {
        "description": "Service specific configuration",
        "type": "object",
        "properties": {
            "namespace": {
                "description": "user namespace",
                "type": "string",
                "default": "default",
                "form": true,
                "x-form": {
                  "hidden": true,
                  "value": "{{project.id}}"
                },
                "x-onyxia": {
                  "hidden": true,
                  "overwriteDefaultWith": "{{project.id}}"
                }
            },
            "image" : {
                "description": "backend image docker",
                "type": "object",  
                "properties": {
                  "pullPolicy": {
                    "type": "string",
                    "description": "option when pulling the docker image",
                    "default": "IfNotPresent",
                    "enum": ["IfNotPresent","Always","Never"]
                  },
                  "version": {
                    "description": "supported versions",
                    "type": "string",
                    "enum": [
                        "netflixoss/metaflow_metadata_service:v2.3.3"
                            ],
                    "pattern": "^[a-z0-9-_./]+(:[a-z0-9-_.]+)?$",
                    "hidden": {
                        "value": true,
                        "path": "service/image/custom/enabled"
                    },
                    "default": "netflixoss/metaflow_metadata_service:v2.3.3"
                  },
                  "custom" : {
                    "description": "use a custom docker image",
                    "type": "object",  
                    "properties": {
                      "enabled": {
                        "title": "custom image",
                        "type": "boolean",
                        "description": "use a custom jupyter docker image",
                        "default": false
                      },
                      "version": {
                        "description": "unsupported version",
                        "type": "string",
                        "default": "netflixoss/metaflow_metadata_service:v2.3.3",
                        "pattern": "^[a-z0-9-_./]+(:[a-z0-9-_.]+)?$",
                        "hidden": {
                            "value": false,
                            "path": "service/image/custom/enabled"
                        }
                      }
                    }        
                  }
                }        
            },
            "uiImage" : {
                "description": "UI image docker",
                "type": "object",  
                "properties": {
                  "pullPolicy": {
                    "type": "string",
                    "description": "option when pulling the docker image",
                    "default": "IfNotPresent",
                    "enum": ["IfNotPresent","Always","Never"]
                  },
                  "version": {
                    "description": "supported versions",
                    "type": "string",
                    "enum": [
                        "public.ecr.aws/outerbounds/metaflow_ui:v1.1.4"
                            ],
                    "pattern": "^[a-z0-9-_./]+(:[a-z0-9-_.]+)?$",
                    "hidden": {
                        "value": true,
                        "path": "service/image/custom/enabled"
                    },
                    "default": "public.ecr.aws/outerbounds/metaflow_ui:v1.1.4"
                  },
                  "custom" : {
                    "description": "use a custom docker image",
                    "type": "object",  
                    "properties": {
                      "enabled": {
                        "title": "custom image",
                        "type": "boolean",
                        "description": "use a custom jupyter docker image",
                        "default": false
                      },
                      "version": {
                        "description": "unsupported version",
                        "type": "string",
                        "default": "public.ecr.aws/outerbounds/metaflow_ui:v1.1.4",
                        "pattern": "^[a-z0-9-_./]+(:[a-z0-9-_.]+)?$",
                        "hidden": {
                            "value": false,
                            "path": "service/image/custom/enabled"
                        }
                      }
                    }        
                  }
                }        
            },
            "METAFLOW_DATASTORE_SYSROOT_S3": {
              "description": "directory of data root repository",
              "title": "directory",
              "type": "string",
              "default": "/tmp/metaflow/data/",
              "x-form": {
                "value": "s3://{{s3.AWS_BUCKET_NAME}}/metaflow"
              },
              "x-onyxia": {
                "overwriteDefaultWith": "s3://{{s3.AWS_BUCKET_NAME}}/metaflow"
              }
            }
        }
    },
      "s3": {
        "description": "Configuration of temporary identity",
        "type": "object",
        "properties": {
            "enabled": {
                "type": "boolean",
                "description": "Add S3 temporary identity inside your environment",
                "default": true
            },
            "accessKeyId": {
                "description": "AWS Access Key",
                "type": "string",
                "x-form": {
                    "value": "{{s3.AWS_ACCESS_KEY_ID}}"
                },
                "x-onyxia": {
                    "overwriteDefaultWith": "{{s3.AWS_ACCESS_KEY_ID}}"
                },
                "hidden": {
                    "value": false,
                    "path": "s3/enabled"
                }
            },
            "endpoint": {
                "description": "AWS S3 Endpoint",
                "type": "string",
                "x-form": {
                    "value": "{{s3.AWS_S3_ENDPOINT}}"
                },
                "x-onyxia": {
                    "overwriteDefaultWith": "{{s3.AWS_S3_ENDPOINT}}"
                },
                "hidden": {
                    "value": false,
                    "path": "s3/enabled"
                }
            },
            "defaultRegion": {
                "description": "AWS S3 default region",
                "type": "string",
                "x-form": {
                    "value": "{{s3.AWS_DEFAULT_REGION}}"
                },
                "x-onyxia": {
                    "overwriteDefaultWith": "{{s3.AWS_DEFAULT_REGION}}"
                },
                "hidden": {
                    "value": false,
                    "path": "s3/enabled"
                }
            },
            "secretAccessKey": {
                "description": "AWS S3 secret access key",
                "type": "string",
                "x-form": {
                    "value": "{{s3.AWS_SECRET_ACCESS_KEY}}"
                },
                "x-onyxia": {
                    "overwriteDefaultWith": "{{s3.AWS_SECRET_ACCESS_KEY}}"
                },
                "hidden": {
                    "value": false,
                    "path": "s3/enabled"
                }
            },
            "sessionToken": {
                "description": "AWS S3 session Token",
                "type": "string",
                "x-form": {
                    "value": "{{s3.AWS_SESSION_TOKEN}}"
                },
                "x-onyxia": {
                    "overwriteDefaultWith": "{{s3.AWS_SESSION_TOKEN}}"
                },
                "hidden": {
                    "value": false,
                    "path": "s3/enabled"
                }
            }
        }
    },
      "ingress": {
        "type": "object",
        "form": true,
        "title": "Ingress Details",
        "properties": {
          "hostname": {
            "type": "string",
            "form": true,
            "title": "Hostname",
            "x-form": {
              "hidden": true,
              "value": "{{project.id}}-{{k8s.randomSubdomain}}.{{k8s.domain}}"
            },
            "x-onyxia": {
                "hidden": true,
                "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}.{{k8s.domain}}"
            }
          },
          "ingressClassName": {
              "type": "string",
              "form": true,
              "title": "ingressClassName",
              "default": "",
              "x-form": {
                  "hidden": true,
                  "value": "{{k8s.ingressClassName}}"
              },
              "x-onyxia": {
                  "hidden": true,
                  "overwriteDefaultWith": "{{k8s.ingressClassName}}"
              }
          }
        }
      },
      "security": {
        "description": "security specific configuration",
        "type": "object",
        "properties": {
            "allowlist": {
              "type": "object",
              "description": "IP protection",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "title": "Enable IP protection",
                  "description": "Only the configured set of IPs will be able to reach the service",
                  "default": true,
                  "x-form": {
                    "value": "{{region.defaultIpProtection}}"
                  },
                  "x-onyxia": {
                      "overwriteDefaultWith": "region.defaultIpProtection"
                  }
                },
                "ip": {
                  "type": "string",
                  "description": "the white list of IP is whitespace",
                  "title": "Whitelist of IP",
                  "default": "0.0.0.0",
                  "x-form": {
                    "value": "{{user.ip}}"
                  },
                  "x-onyxia": {
                      "overwriteDefaultWith": "{{user.ip}}"
                  },
                  "hidden": {
                      "value": false,
                      "path": "security/allowlist/enabled"
                  } 
                }
              }
          },
          "networkPolicy": {
              "type": "object",
              "description": "Define access policy to the service",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "title": "Enable network policy",
                  "description": "Only pod from the same namespace will be allowed",
                  "default": true,
                  "x-form": {
                    "value": "{{region.defaultNetworkPolicy}}"
                  },
                  "x-onyxia": {
                      "overwriteDefaultWith": "region.defaultNetworkPolicy"
                  }
                },
                "from": {
                  "type": "array",
                  "description": "Array of source allowed to have network access to your service",
                  "default" : [
                    {
                      "namespaceSelector": {
                        "matchLabels": {
                          "kubernetes.io/metadata.name": "ingress"
                        }
                      }
                    }
                  ], 
                  "x-form": {
                      "value": "{{region.from}}"
                  },
                  "x-onyxia": {
                      "overwriteDefaultWith": "region.from"
                  }
                }
              }
          }
        }
      },
      "global": {
        "description": "postgres specific configuration",
        "type": "object",
        "title": "Database",
        "properties": {
          "postgresql": {
            "description": "postgres specific configuration",
            "type": "object",
            "title": "Database",
            "properties": {
              "auth": {
                "description": "postgres specific configuration",
                "type": "object",
                "title": "Authentification",
                "properties": {
                  "username": {
                    "type": "string",
                    "title": "Admin user",
                    "default": "admin",
                    "x-form": {
                      "value": "{{project.id}}"
                    },
                    "x-onyxia": {
                      "overwriteDefaultWith": "{{project.id}}"
                    }
                  },
                  "password": {
                    "type": "string",
                    "title": "Password",
                    "default": "changeme",
                    "x-form": {
                      "value": "{{project.password}}"
                    },
                    "x-onyxia": {
                      "overwriteDefaultWith": "{{project.password}}"
                    }
                  },
                  "database": {
                    "description": "Name for the default database that is created when the image is first started.",
                    "type": "string",
                    "title": "Database",
                    "default": "metaflow"
                  }
                }
              }
            }
          }
        }
      }
    }
  }